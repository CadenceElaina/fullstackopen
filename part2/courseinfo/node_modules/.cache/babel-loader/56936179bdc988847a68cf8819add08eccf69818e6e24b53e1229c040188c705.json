{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\OneDrive\\\\Desktop\\\\fullstackopen\\\\part2\\\\courseinfo\\\\src\\\\components\\\\Course.js\";\nimport React from 'react';\nimport '../App.css';\n\n/* const Header = ({ name }) => {\r\n    return (\r\n        <h2>{name}</h2>\r\n    )\r\n} */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n_c = Header;\nconst Content = _ref2 => {\n  let {\n    parts\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      name: part.name,\n      exercises: part.exercises\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Content;\nconst Part = _ref3 => {\n  let {\n    name,\n    exercises\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [name, \" \", exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Part;\nconst Course1 = _ref4 => {\n  let {\n    course\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Course1;\nconst Course = _ref5 => {\n  let {\n    course\n  } = _ref5;\n  //console.log(course)\n  //console.log(course.parts.exercises)\n  const parts = course.parts.map(x => x.exercises);\n  const sum = parts.reduce((sum, part) => {\n    return sum + part;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), course.parts.map((x, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-item\",\n      children: [x.name, \" \", x.exercises]\n    }, x.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"total of \", sum, \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c5 = Course;\nexport default Course;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Course1\");\n$RefreshReg$(_c5, \"Course\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","_ref","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Content","_ref2","parts","map","part","Part","exercises","id","_c2","_ref3","_c3","Course1","_ref4","course","Total","_c4","Course","_ref5","x","sum","reduce","i","className","_c5","$RefreshReg$"],"sources":["C:/Users/coope/OneDrive/Desktop/fullstackopen/part2/courseinfo/src/components/Course.js"],"sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\n/* const Header = ({ name }) => {\r\n    return (\r\n        <h2>{name}</h2>\r\n    )\r\n} */\r\n\r\nconst Header = ({ name }) => {\r\n    return <h2>{name}</h2>\r\n}\r\nconst Content = ({ parts }) => {\r\n    return (\r\n        <div>\r\n            {parts.map((part) => (\r\n                <Part key={part.id} name={part.name} exercises={part.exercises} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nconst Part = ({ name, exercises }) => {\r\n    return (\r\n        <p>{name} {exercises}</p>\r\n    )\r\n}\r\nconst Course1 = ({ course }) => {\r\n    return (\r\n        <div>\r\n            <Header name={course.name} />\r\n            <Content parts={course.parts} />\r\n            <Total parts={course.parts} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Course = ({ course }) => {\r\n    //console.log(course)\r\n    //console.log(course.parts.exercises)\r\n    const parts = course.parts.map(x => x.exercises)\r\n    const sum = parts.reduce((sum, part) => {\r\n        return sum + part\r\n    }, 0)\r\n    return (\r\n        <div>\r\n            <h2>{course.name}</h2>\r\n\r\n            {course.parts.map((x, i) =>\r\n                <li className='list-item' key={x.id}>\r\n                    {x.name} {x.exercises}\r\n                </li>)}\r\n\r\n            <p><strong>total of {sum} exercises</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}