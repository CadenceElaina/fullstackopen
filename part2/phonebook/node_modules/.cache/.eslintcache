[{"C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\index.js":"1","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\App.js":"2","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\services\\persons.js":"3","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\Filter.js":"4","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\PersonForm.js":"5","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\Persons.js":"6","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\Notification.js":"7"},{"size":180,"mtime":1680051290626,"results":"8","hashOfConfig":"9"},{"size":5283,"mtime":1680053569561,"results":"10","hashOfConfig":"9"},{"size":810,"mtime":1680614861838,"results":"11","hashOfConfig":"9"},{"size":239,"mtime":1680091435286,"results":"12","hashOfConfig":"9"},{"size":611,"mtime":1680007877179,"results":"13","hashOfConfig":"9"},{"size":391,"mtime":1680008721640,"results":"14","hashOfConfig":"9"},{"size":227,"mtime":1680050795515,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lo3di0",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\index.js",[],[],"C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\App.js",["39","40","41"],[],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport personService from './services/persons'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filteredSearch, setFilteredSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleFilteredSearch = (e) => {\n    //console.log(e.target.value)\n    setFilteredSearch(e.target.value)\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n    persons.map((person) => {\n      if (person.name.toLowerCase() === e.target.value.toLowerCase()) {\n        //console.log(person.name, e.target.value)\n        /* return */ alert(`${person.name} is already added to phonebook`)\n      }\n    })\n    //console.log(newName)\n  }\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n    persons.map((person) => {\n      if (person.number === e.target.value) {\n        //console.log(person.name, e.target.value)\n        /* return */ alert(`${person.number} is already added to phonebook`)\n      }\n    })\n    //console.log(newName)\n  }\n  const addPerson = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: newName,\n    }\n    const person = persons.find(p => p.id === newName)\n    if (!person) {\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`Added ${returnedPerson.name}`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n\n    }\n    else {\n      //console.log(person)\n      let result = window.confirm(`${newName} is already added to phonebook, replace the old\n      number with ${newNumber}?`)\n      if (result/*  === true */) {\n        const changedPerson = { ...person, number: newNumber/* , id: newNumber  */ }\n        personService\n          .update(person.id, changedPerson)\n          .then(changedPerson => {\n            const oldNumber = persons.find(p => p.id === person.id)\n            console.log(oldNumber)\n            setPersons(persons.map(p => p.id !== person.id ? p : changedPerson))\n            setNotification(`Changed ${changedPerson.name}'s number from ${oldNumber.number} to ${newNumber}`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setNotification(`Information of ${person.name} has already been removed from server`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n            //Update the UI to show that the person you are editing has been removed from the server in another browser\n            setPersons(persons.filter(p => p.id !== person.id))\n            console.log(error)\n          })\n        /* .then(changedPerson => {\n          setPersons(persons.map(person => person.id !== person.id ? person : changedPerson))\n        }) */\n        //console.log(persons.map(p => p.id !== person.id ? p : changedPerson))\n      }\n      setNewName('')\n      setNewNumber('')\n    }\n    /*  axios\n       .post('http://localhost:3001/persons', personObject)\n       .then(response => {\n         setPersons(persons.concat(response.data))\n         setNewName('')\n         setNewNumber('')\n       }) */\n    /*  request.then(response => response.data)\n     setPersons(persons.concat(personObject))\n     setNewName('')\n     setNewNumber('') */\n  }\n\n  const deletePerson = id => {\n    let person = persons.find(p => p.id === id)\n    person = person.name\n    let result = window.confirm(`Delete ${person} ?`)\n    if (result === true) {\n\n\n      console.log(`delete id:${id}`)\n\n      /*  const changedPerson = {...person, } */\n      personService\n        .remove(id)\n        .then(returnedPerson => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          setNotification(`Information of ${person} has already been removed from server`)\n          console.log(error)\n        })\n      /*  .then(response => console.log(response)) */\n    }\n\n  }\n\n  const personsToShow = filteredSearch === ''\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filteredSearch.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter filteredSearch={filteredSearch} handleFilteredSearch={handleFilteredSearch} />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons\n        persons={personsToShow}\n        deletePerson={deletePerson} />\n\n      ...\n    </div>\n  )\n}\n\nexport default App","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\services\\persons.js",["42"],[],"import axios from 'axios'\r\n/* const baseUrl = 'http://localhost:3001/persons' */\r\n/* const baseUrl = 'http://localhost:3001/api/persons' */\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id, newObject) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\Filter.js",[],[],"C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\PersonForm.js",[],[],"C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\Persons.js",[],[],"C:\\Users\\coope\\OneDrive\\Desktop\\fullstackopen\\part2\\phonebook\\src\\components\\Notification.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":32,"column":26,"nodeType":"49","messageId":"50","endLine":32,"endColumn":28},{"ruleId":"47","severity":1,"message":"48","line":42,"column":26,"nodeType":"49","messageId":"50","endLine":42,"endColumn":28},{"ruleId":"51","severity":1,"message":"52","line":26,"column":1,"nodeType":"53","endLine":31,"endColumn":2},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]