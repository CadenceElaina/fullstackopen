{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\OneDrive\\\\Desktop\\\\fullstackopen\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  //console.log(handleClick, text)\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst StatisticsLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StatisticsLine;\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  const all = good + neutral + bad;\n  const average = all > 0 ? ((good - bad) / all).toFixed(2) : 0;\n  const positive = all > 0 ? good / all * 100 : 0;\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  /*  const [all, setAll] = useState({\n     good: 0,\n     neutral: 0,\n     bad: 0,\n     total: 0\n   }) */\n  //const [average, setAverage] = useState(0)\n\n  const handleGood = () => {\n    const updatedTotal = total + 1;\n    setTotal(updatedTotal);\n    const updatedGood = good + 1;\n    setGood(updatedGood);\n    /*     setAll({ ...all, good: all.good + 1, total: all.total + 1 })\n        console.log(all.total)\n        all.bad === 0 ? setAverage(updatedGood) :\n          setAverage(updatedGood + (all.bad * -1) / all.total + 1) */\n  };\n\n  const handleNeutral = () => {\n    const updatedTotal = total + 1;\n    setTotal(updatedTotal);\n    const updatedNeutral = neutral + 1;\n    setNeutral(updatedNeutral);\n    /*     setAll({ ...all, neutral: all.neutral + 1, total: all.total + 1 })\n        setAverage(all.good + (all.bad * -1) / all.total + 1) */\n  };\n\n  const handleBad = () => {\n    const updatedTotal = total + 1;\n    setTotal(updatedTotal);\n    const updatedBad = bad + 1;\n    setBad(updatedBad);\n    /*     setAll({ ...all, bad: all.bad + 1, total: all.total + 1 })\n        setAverage(all.good + (updatedBad * -1) / all.total + 1) */\n  };\n\n  const a = (good + neutral * 0 + bad * -1) / total.toFixed(1);\n  const positive = (good / total * 100).toFixed(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dRsTqApJtWIArC5jDJyGkRK1Szw=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticsLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticsLine","_ref2","value","_c2","Statistics","_ref3","good","neutral","bad","all","average","toFixed","positive","_c3","App","_s","setGood","setNeutral","setBad","total","setTotal","handleGood","updatedTotal","updatedGood","handleNeutral","updatedNeutral","handleBad","updatedBad","a","_c4","$RefreshReg$"],"sources":["C:/Users/coope/OneDrive/Desktop/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => {\n  //console.log(handleClick, text)\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst StatisticsLine = ({ text, value }) => {\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  )\n}\n\nconst Statistics = ({ good, neutral, bad }) => {\n  const all = good + neutral + bad\n  const average = all > 0 ? ((good - bad) / all).toFixed(2) : 0\n  const positive = all > 0 ? ((good / all) * 100) : 0\n\n  if (all === 0) {\n    return <div>No feedback given</div>\n  }\n\n  return (\n    <table>\n      <tbody>\n        <StatisticsLine text='good' value={good} />\n      </tbody>\n    </table>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n  /*  const [all, setAll] = useState({\n     good: 0,\n     neutral: 0,\n     bad: 0,\n     total: 0\n   }) */\n  //const [average, setAverage] = useState(0)\n\n  const handleGood = () => {\n    const updatedTotal = total + 1\n    setTotal(updatedTotal)\n    const updatedGood = good + 1\n    setGood(updatedGood)\n    /*     setAll({ ...all, good: all.good + 1, total: all.total + 1 })\n        console.log(all.total)\n        all.bad === 0 ? setAverage(updatedGood) :\n          setAverage(updatedGood + (all.bad * -1) / all.total + 1) */\n  }\n\n  const handleNeutral = () => {\n    const updatedTotal = total + 1\n    setTotal(updatedTotal)\n    const updatedNeutral = neutral + 1\n    setNeutral(updatedNeutral)\n    /*     setAll({ ...all, neutral: all.neutral + 1, total: all.total + 1 })\n        setAverage(all.good + (all.bad * -1) / all.total + 1) */\n  }\n\n  const handleBad = () => {\n    const updatedTotal = total + 1\n    setTotal(updatedTotal)\n    const updatedBad = bad + 1\n    setBad(updatedBad)\n    /*     setAll({ ...all, bad: all.bad + 1, total: all.total + 1 })\n        setAverage(all.good + (updatedBad * -1) / all.total + 1) */\n  }\n\n  const a = (good + (neutral * 0) + (bad * -1)) / total.toFixed(1)\n  const positive = ((good / total) * 100).toFixed(1)\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button handleClick={handleGood} text='good' />\n      <Button handleClick={handleNeutral} text='neutral' />\n      <Button handleClick={handleBad} text='bad' />\n\n      <h2>statistics</h2>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n      {/*   <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {total}</p>\n      <p>average {isNaN(a) ? 0 : a}</p>\n      <p>positive {isNaN(positive) ? 0 : positive}%</p> */}\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}