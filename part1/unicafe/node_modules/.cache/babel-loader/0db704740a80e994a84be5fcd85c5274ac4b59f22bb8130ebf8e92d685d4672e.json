{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\OneDrive\\\\Desktop\\\\fullstackopen\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  console.log(handleClick, text);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  /*  const [all, setAll] = useState({\n     good: 0,\n     neutral: 0,\n     bad: 0,\n     total: 0\n   }) */\n  //const [average, setAverage] = useState(0)\n\n  const handleGood = () => {\n    const updatedTotal = total + 1;\n    setTotal(updatedTotal);\n    const weight = 1;\n    const updatedGood = good + 1;\n    setGood(updatedGood);\n    /*     setAll({ ...all, good: all.good + 1, total: all.total + 1 })\n        console.log(all.total)\n        all.bad === 0 ? setAverage(updatedGood) :\n          setAverage(updatedGood + (all.bad * -1) / all.total + 1) */\n  };\n\n  const handleNeutral = () => {\n    const updatedTotal = total + 1;\n    setTotal(updatedTotal);\n    const weight = 0;\n    const updatedNeutral = neutral + 1;\n    setNeutral(updatedNeutral);\n    /*     setAll({ ...all, neutral: all.neutral + 1, total: all.total + 1 })\n        setAverage(all.good + (all.bad * -1) / all.total + 1) */\n  };\n\n  const handleBad = () => {\n    const updatedTotal = total + 1;\n    setTotal(updatedTotal);\n    const weight = -1;\n    const updatedBad = bad + 1;\n    setBad(updatedBad);\n    /*     setAll({ ...all, bad: all.bad + 1, total: all.total + 1 })\n        setAverage(all.good + (updatedBad * -1) / all.total + 1) */\n  };\n\n  const a = (good + neutral * 0 + bad * -1) / total.toFixed(1);\n  const positive = (good / total * 100).toFixed(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", isNaN(a) ? 0 : a]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", isNaN(positive) ? 0 : positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dRsTqApJtWIArC5jDJyGkRK1Szw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","handleClick","text","console","log","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","handleGood","updatedTotal","weight","updatedGood","handleNeutral","updatedNeutral","handleBad","updatedBad","a","toFixed","positive","isNaN","_c2","$RefreshReg$"],"sources":["C:/Users/coope/OneDrive/Desktop/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => {\n  console.log(handleClick, text)\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n  /*  const [all, setAll] = useState({\n     good: 0,\n     neutral: 0,\n     bad: 0,\n     total: 0\n   }) */\n  //const [average, setAverage] = useState(0)\n\n  const handleGood = () => {\n    const updatedTotal = total + 1\n    setTotal(updatedTotal)\n    const weight = 1\n    const updatedGood = good + 1\n    setGood(updatedGood)\n    /*     setAll({ ...all, good: all.good + 1, total: all.total + 1 })\n        console.log(all.total)\n        all.bad === 0 ? setAverage(updatedGood) :\n          setAverage(updatedGood + (all.bad * -1) / all.total + 1) */\n  }\n\n  const handleNeutral = () => {\n    const updatedTotal = total + 1\n    setTotal(updatedTotal)\n    const weight = 0\n    const updatedNeutral = neutral + 1\n    setNeutral(updatedNeutral)\n    /*     setAll({ ...all, neutral: all.neutral + 1, total: all.total + 1 })\n        setAverage(all.good + (all.bad * -1) / all.total + 1) */\n  }\n\n  const handleBad = () => {\n    const updatedTotal = total + 1\n    setTotal(updatedTotal)\n    const weight = -1\n    const updatedBad = bad + 1\n    setBad(updatedBad)\n    /*     setAll({ ...all, bad: all.bad + 1, total: all.total + 1 })\n        setAverage(all.good + (updatedBad * -1) / all.total + 1) */\n  }\n\n  const a = (good + (neutral * 0) + (bad * -1)) / total.toFixed(1)\n  const positive = ((good / total) * 100).toFixed(1)\n  return (\n    <div>\n      <h2>give feedback</h2>\n      <Button handleClick={handleGood} text='good' />\n      <Button handleClick={handleNeutral} text='neutral' />\n      <Button handleClick={handleGood} text='good' />\n      <button onClick={handleGood}>good</button>\n      <button onClick={handleNeutral}>neutral</button>\n      <button onClick={handleBad}>bad</button>\n      <h2>statistics</h2>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {total}</p>\n      <p>average {isNaN(a) ? 0 : a}</p>\n      <p>positive {isNaN(positive) ? 0 : positive}%</p>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}