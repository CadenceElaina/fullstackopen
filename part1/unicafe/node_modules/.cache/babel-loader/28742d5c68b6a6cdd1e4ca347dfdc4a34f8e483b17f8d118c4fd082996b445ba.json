{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\OneDrive\\\\Desktop\\\\fullstackopen\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  console.log(handleClick, text);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const [totalReviews, setTotalReviews] = useState(0);\n  const incGood = () => {\n    const updatedGood = good + 1;\n    const updatedReviews = totalReviews + 1;\n    setGood(updatedGood);\n    setTotalReviews(updatedReviews);\n    setPositive(updatedGood + bad * -1 + neutral / updatedReviews);\n    setAverage(neutral * 0 + updatedGood + bad * -1 / updatedReviews);\n  };\n  const incNeutral = () => {\n    const updatedReviews = totalReviews + 1;\n    const updatedNeutral = neutral + 1;\n    setNeutral(updatedNeutral);\n    setTotalReviews(updatedReviews);\n    setPositive(good + bad * -1 + updatedNeutral / updatedReviews);\n    setAverage(bad * -1 + good + neutral * 0 / updatedReviews);\n  };\n  const incBad = () => {\n    const updatedBad = bad + 1;\n    const updatedReviews = totalReviews + 1;\n    setBad(updatedBad);\n    setTotalReviews(updatedReviews);\n    setPositive(good + updatedBad * -1 + neutral / updatedReviews);\n    setAverage(updatedBad * -1 + good / updatedReviews);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"feedback\",\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incGood,\n        text: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incNeutral,\n        text: \"Neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incBad,\n        text: \"Bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Good: \", good]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Neutral: \", neutral]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bad: \", bad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Reviews: \", totalReviews]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average: \", average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Positive: \", positive]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E+CbynlVqzDwGY+2uZy0AS5oyQM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","handleClick","text","console","log","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","average","setAverage","positive","setPositive","totalReviews","setTotalReviews","incGood","updatedGood","updatedReviews","incNeutral","updatedNeutral","incBad","updatedBad","className","id","_c2","$RefreshReg$"],"sources":["C:/Users/coope/OneDrive/Desktop/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport './App.css'\nconst Button = ({ handleClick, text }) => {\n  console.log(handleClick, text)\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n  const [totalReviews, setTotalReviews] = useState(0)\n\n  const incGood = () => {\n    const updatedGood = good + 1\n    const updatedReviews = totalReviews + 1\n    setGood(updatedGood)\n    setTotalReviews(updatedReviews)\n    setPositive(updatedGood + (bad * -1) + neutral / updatedReviews)\n    setAverage(neutral * 0 + updatedGood + bad * -1 / updatedReviews)\n  }\n  const incNeutral = () => {\n    const updatedReviews = totalReviews + 1\n    const updatedNeutral = neutral + 1\n    setNeutral(updatedNeutral)\n    setTotalReviews(updatedReviews)\n    setPositive(good + (bad * -1) + updatedNeutral / updatedReviews)\n    setAverage(bad * -1 + good + neutral * 0 / updatedReviews)\n  }\n  const incBad = () => {\n    const updatedBad = bad + 1\n    const updatedReviews = totalReviews + 1\n    setBad(updatedBad)\n    setTotalReviews(updatedReviews)\n    setPositive(good + (updatedBad * -1) + neutral / updatedReviews)\n    setAverage(updatedBad * -1 + good / updatedReviews)\n  }\n\n\n  return (\n    <div className='container'>\n      <h2 id='feedback'>give feedback</h2>\n      <div className='buttons_container'>\n\n        <Button handleClick={incGood} text='Good' />\n        <Button handleClick={incNeutral} text='Neutral' />\n        <Button handleClick={incBad} text='Bad' />\n      </div>\n      <div className='results_container'>\n        <h2>statistics</h2>\n        <div className='results'>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total Reviews: {totalReviews}</p>\n          <p>Average: {average}</p>\n          <p>Positive: {positive}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}