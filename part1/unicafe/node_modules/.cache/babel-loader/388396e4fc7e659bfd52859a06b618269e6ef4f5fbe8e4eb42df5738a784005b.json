{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coope\\\\OneDrive\\\\Desktop\\\\fullstackopen\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  // console.log(handleClick, text)\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const [totalReviews, setTotalReviews] = useState(0);\n  const incGood = () => {\n    const updatedGood = good + 1;\n    const updatedReviews = totalReviews + 1;\n    setGood(updatedGood);\n    setTotalReviews(updatedReviews);\n    setPositive(updatedGood + bad * -1 + neutral / updatedReviews);\n    console.log('good: ' + updatedGood, 'bad: ' + bad, 'neutral: ' + neutral, 'total: ' + updatedReviews);\n    const averagePercentage = updatedGood + bad * -1 / updatedReviews * 100;\n    setAverage(averagePercentage.toFixed(2));\n  };\n  const incNeutral = () => {\n    const updatedReviews = totalReviews + 1;\n    const updatedNeutral = neutral + 1;\n    setNeutral(updatedNeutral);\n    setTotalReviews(updatedReviews);\n    setPositive(good + bad * -1 + updatedNeutral / updatedReviews);\n    console.log('good: ' + good, 'bad: ' + bad, 'neutral: ' + updatedNeutral, 'total: ' + updatedReviews);\n    const averagePercentage = bad * -1 + good / updatedReviews * 100;\n    setAverage(averagePercentage.toFixed(2));\n  };\n  const incBad = () => {\n    const updatedBad = bad + 1;\n    const updatedReviews = totalReviews + 1;\n    setBad(updatedBad);\n    setTotalReviews(updatedReviews);\n    setPositive(good + updatedBad * -1 + neutral / updatedReviews);\n    console.log('good: ' + good, 'bad: ' + updatedBad, 'neutral: ' + neutral, 'total: ' + updatedReviews);\n    const averagePercentage = updatedBad * -1 + good / updatedReviews * 100;\n    setAverage(averagePercentage.toFixed(2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"feedback\",\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incGood,\n        text: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incNeutral,\n        text: \"Neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: incBad,\n        text: \"Bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Good: \", good]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Neutral: \", neutral]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bad: \", bad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Reviews: \", totalReviews]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average: \", average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Positive: \", positive]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E+CbynlVqzDwGY+2uZy0AS5oyQM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","good","setGood","neutral","setNeutral","bad","setBad","average","setAverage","positive","setPositive","totalReviews","setTotalReviews","incGood","updatedGood","updatedReviews","console","log","averagePercentage","toFixed","incNeutral","updatedNeutral","incBad","updatedBad","className","id","_c2","$RefreshReg$"],"sources":["C:/Users/coope/OneDrive/Desktop/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport './App.css'\nconst Button = ({ handleClick, text }) => {\n  // console.log(handleClick, text)\n  return (\n    <button onClick={handleClick}>{text}</button>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n  const [totalReviews, setTotalReviews] = useState(0)\n\n  const incGood = () => {\n    const updatedGood = good + 1\n    const updatedReviews = totalReviews + 1\n    setGood(updatedGood)\n    setTotalReviews(updatedReviews)\n    setPositive(updatedGood + (bad * -1) + neutral / updatedReviews)\n    console.log('good: ' + updatedGood, 'bad: ' + bad, 'neutral: ' + neutral, 'total: ' + updatedReviews,)\n    const averagePercentage = (updatedGood + (bad * -1) / updatedReviews * 100)\n    setAverage(averagePercentage.toFixed(2))\n  }\n  const incNeutral = () => {\n    const updatedReviews = totalReviews + 1\n    const updatedNeutral = neutral + 1\n    setNeutral(updatedNeutral)\n    setTotalReviews(updatedReviews)\n    setPositive(good + (bad * -1) + updatedNeutral / updatedReviews)\n    console.log('good: ' + good, 'bad: ' + bad, 'neutral: ' + updatedNeutral, 'total: ' + updatedReviews,)\n    const averagePercentage = (bad * -1 + good / updatedReviews * 100)\n    setAverage(averagePercentage.toFixed(2))\n  }\n  const incBad = () => {\n    const updatedBad = bad + 1\n    const updatedReviews = totalReviews + 1\n    setBad(updatedBad)\n    setTotalReviews(updatedReviews)\n    setPositive(good + (updatedBad * -1) + neutral / updatedReviews)\n    console.log('good: ' + good, 'bad: ' + updatedBad, 'neutral: ' + neutral, 'total: ' + updatedReviews,)\n    const averagePercentage = (updatedBad * -1 + good / updatedReviews * 100)\n    setAverage(averagePercentage.toFixed(2))\n  }\n\n\n  return (\n    <div className='container'>\n      <h2 id='feedback'>give feedback</h2>\n      <div className='buttons_container'>\n\n        <Button handleClick={incGood} text='Good' />\n        <Button handleClick={incNeutral} text='Neutral' />\n        <Button handleClick={incBad} text='Bad' />\n      </div>\n      <div className='results_container'>\n        <h2>statistics</h2>\n        <div className='results'>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total Reviews: {totalReviews}</p>\n          <p>Average: {average}</p>\n          <p>Positive: {positive}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}